/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 custom_dino.glb -t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Sphere001: THREE.Mesh;
    Sphere001_1: THREE.Mesh;
    Sphere001_2: THREE.Mesh;
    Sphere001_3: THREE.Mesh;
    Sphere001_4: THREE.Mesh;
    Sphere001_5: THREE.Mesh;
    Sphere001_6: THREE.Mesh;
    Sphere001_7: THREE.Mesh;
    Sphere001_8: THREE.Mesh;
    Sphere001_9: THREE.Mesh;
    Sphere001_10: THREE.Mesh;
    Sphere001_11: THREE.Mesh;
    Sphere001_12: THREE.Mesh;
    Sphere001_13: THREE.Mesh;
    Sphere001_14: THREE.Mesh;
    Sphere001_15: THREE.Mesh;
    Sphere001_16: THREE.Mesh;
    Sphere001_17: THREE.Mesh;
    Sphere001_18: THREE.Mesh;
    Sphere001_19: THREE.Mesh;
    Sphere001_20: THREE.Mesh;
    Sphere001_21: THREE.Mesh;
    Sphere001_22: THREE.Mesh;
    alien_glasses: THREE.Mesh;
    angel_hat: THREE.Mesh;
    angel_wing: THREE.Mesh;
    arab_object: THREE.Mesh;
    arab_object_1: THREE.Mesh;
    balloon_object: THREE.Mesh;
    balloon_object_1: THREE.Mesh;
    bat_object: THREE.Mesh;
    bat_object_1: THREE.Mesh;
    circle_glasses: THREE.Mesh;
    heart_glasses: THREE.Mesh;
    magic_object: THREE.Mesh;
    magic_object_1: THREE.Mesh;
    my_glasses: THREE.Mesh;
    santa_object: THREE.Mesh;
    santa_object_1: THREE.Mesh;
    star_glasses: THREE.Mesh;
    vampire_object: THREE.Mesh;
    vampire_object_1: THREE.Mesh;
    dino_egg: THREE.Mesh;
    white_cap: THREE.Mesh;
  };
  materials: {
    ["Material.019"]: THREE.MeshStandardMaterial;
    ["Material.021"]: THREE.MeshStandardMaterial;
    ["Material.022"]: THREE.MeshStandardMaterial;
    ["Material.029"]: THREE.MeshStandardMaterial;
    ["Material.030"]: THREE.MeshStandardMaterial;
    ["Material.031"]: THREE.MeshStandardMaterial;
    ["Material.032"]: THREE.MeshStandardMaterial;
    ["Material.033"]: THREE.MeshStandardMaterial;
    ["Material.034"]: THREE.MeshStandardMaterial;
    ["Material.035"]: THREE.MeshStandardMaterial;
    ["Material.036"]: THREE.MeshStandardMaterial;
    ["Material.037"]: THREE.MeshStandardMaterial;
    ["Material.038"]: THREE.MeshStandardMaterial;
    ["Material.039"]: THREE.MeshStandardMaterial;
    ["Material.040"]: THREE.MeshStandardMaterial;
    ["Material.041"]: THREE.MeshStandardMaterial;
    ["Material.042"]: THREE.MeshStandardMaterial;
    ["Material.043"]: THREE.MeshStandardMaterial;
    ["Material.044"]: THREE.MeshStandardMaterial;
    ["Material.045"]: THREE.MeshStandardMaterial;
    ["Material.046"]: THREE.MeshStandardMaterial;
    ["Material.047"]: THREE.MeshStandardMaterial;
    ["Material.048"]: THREE.MeshStandardMaterial;
    alien_material: THREE.MeshStandardMaterial;
    angel_hat_material: THREE.MeshStandardMaterial;
    angel_wing_material: THREE.MeshStandardMaterial;
    arab_material_1: THREE.MeshStandardMaterial;
    arab_material_2: THREE.MeshStandardMaterial;
    balloon_material_1: THREE.MeshStandardMaterial;
    balloon_material_2: THREE.MeshStandardMaterial;
    bat_object_1: THREE.MeshStandardMaterial;
    bat_object_2: THREE.MeshStandardMaterial;
    circle_glasses_material: THREE.MeshStandardMaterial;
    heart_glasses_material: THREE.MeshStandardMaterial;
    magic_material_1: THREE.MeshStandardMaterial;
    magic_material_2: THREE.MeshStandardMaterial;
    mymaterial: THREE.MeshStandardMaterial;
    santa_material_1: THREE.MeshStandardMaterial;
    santa_materail_2: THREE.MeshStandardMaterial;
    star_material: THREE.MeshStandardMaterial;
    vampire_material1: THREE.MeshStandardMaterial;
    vampire_material2: THREE.MeshStandardMaterial;
    egg_material: THREE.MeshStandardMaterial;
    white_material: THREE.MeshStandardMaterial;
  };
};
interface Item {
  [key: string]: string;
}
type Props = {
  position: number[];
  itemStatus?: Item;
};

export function Custom_dino({ position, itemStatus }: Props) {
  const { nodes, materials } = useGLTF("/3D/custom_dino.glb") as GLTFResult;

  // 안경 custom
  const selectGlasses = () => {
    switch (itemStatus?.glasses) {
      case "1":
        // 하트 안경
        return (
          <>
            <mesh
              geometry={nodes.heart_glasses.geometry}
              material={materials.heart_glasses_material}
              position={[-0.1, 3.29, 0.32]}
              rotation={[0.23, -0.74, 0.15]}
              scale={0.32}
            />
          </>
        );
      case "2":
        // 별 안경
        return (
          <>
            <mesh
              geometry={nodes.star_glasses.geometry}
              material={materials.star_material}
              position={[-0.02, 3.17, 0.24]}
              rotation={[3.13, -0.81, 3.14]}
              scale={0.3}
            />
          </>
        );
      case "3":
        // alien 안경
        return (
          <>
            <mesh
              geometry={nodes.alien_glasses.geometry}
              material={materials.alien_material}
              position={[0.05, 3.36, 0.16]}
              rotation={[-3.14, -0.82, -3.13]}
              scale={0.35}
            />
          </>
        );
      case "4":
        // 동그란 안경
        return (
          <>
            <mesh
              geometry={nodes.circle_glasses.geometry}
              material={materials.circle_glasses_material}
              position={[-0.01, 3.19, 0.25]}
              rotation={[-3.12, -0.8, -3.07]}
              scale={0.3}
            />
          </>
        );
      case "5":
        // 마이안경
        return (
          <>
            <mesh
              geometry={nodes.my_glasses.geometry}
              material={materials.mymaterial}
              position={[0.05, 3.22, 0.14]}
              rotation={[3.13, -0.87, -3.13]}
              scale={0.3}
            />
          </>
        );
    }
  };
  // 모자 custom
  const selectHat = () => {
    switch (itemStatus?.hat) {
      case "1":
        // 천사 링
        return (
          <>
            <mesh
              geometry={nodes.angel_hat.geometry}
              material={materials.angel_hat_material}
              position={[-0.06, 4.22, 0.73]}
              rotation={[-1.56, 0, 0.43]}
              scale={0.36}
            />
          </>
        );
      case "2":
        // 아랍 모자
        return (
          <>
            <group
              position={[0.5, 2.23, -0.39]}
              rotation={[0.01, -0.66, -0.01]}
              scale={[2.28, 2.06, 2.41]}
            >
              <mesh
                geometry={nodes.arab_object.geometry}
                material={materials.arab_material_1}
              />
              <mesh
                geometry={nodes.arab_object_1.geometry}
                material={materials.arab_material_2}
              />
            </group>
          </>
        );
      case "3":
        // 마법 모자
        return (
          <>
            <group position={[0.31, 3.85, -0.15]} scale={[0.77, 0.39, 0.77]}>
              <mesh
                geometry={nodes.magic_object.geometry}
                material={materials.magic_material_1}
              />
              <mesh
                geometry={nodes.magic_object_1.geometry}
                material={materials.magic_material_2}
              />
            </group>
          </>
        );
      case "4":
        // 산타 모자
        return (
          <>
            <group
              position={[0.29, 3.55, -0.15]}
              rotation={[-1.58, 0.01, -2.43]}
              scale={[0.79, 0.83, 0.71]}
            >
              <mesh
                geometry={nodes.santa_object.geometry}
                material={materials.santa_material_1}
              />
              <mesh
                geometry={nodes.santa_object_1.geometry}
                material={materials.santa_materail_2}
              />
            </group>
          </>
        );
      case "5":
        // 털 모자
        return (
          <>
            <mesh
              geometry={nodes.white_cap.geometry}
              material={materials.white_material}
              position={[0.33, 3.59, -0.21]}
              rotation={[-1.77, 0.17, -0.59]}
              scale={0.75}
            />
          </>
        );
    }
  };
  // 날개 custom
  const selectWing = () => {
    switch (itemStatus?.wing) {
      case "1":
        // 천사 날개
        return (
          <>
            <mesh
              geometry={nodes.angel_wing.geometry}
              material={materials.angel_wing_material}
              position={[0.3, 0.45, -0.29]}
              rotation={[3.14, 0.75, -3.14]}
              scale={0.16}
            />
          </>
        );
      case "2":
        // 박쥐 날개
        return (
          <>
            <group
              position={[0.63, 1.55, -0.51]}
              rotation={[-1.35, -0.19, -0.72]}
              scale={0.44}
            >
              <mesh
                geometry={nodes.bat_object.geometry}
                material={materials.bat_object_1}
              />
              <mesh
                geometry={nodes.bat_object_1.geometry}
                material={materials.bat_object_2}
              />
            </group>
          </>
        );
      case "3":
        // 풍선
        return (
          <>
            <group
              position={[-0.58, 2.1, 0.59]}
              rotation={[0.23, -0.02, -0.15]}
              scale={-0.06}
            >
              <mesh
                geometry={nodes.balloon_object.geometry}
                material={materials.balloon_material_1}
              />
              <mesh
                geometry={nodes.balloon_object_1.geometry}
                material={materials.balloon_material_2}
              />
            </group>
          </>
        );
      case "4":
        // 뱀파이어 망토
        return (
          <>
            <group
              position={[0.39, 3.28, -0.3]}
              rotation={[0, -0.76, 0.02]}
              scale={1.87}
            >
              <mesh
                geometry={nodes.vampire_object.geometry}
                material={materials.vampire_material1}
              />
              <mesh
                geometry={nodes.vampire_object_1.geometry}
                material={materials.vampire_material2}
              />
            </group>
          </>
        );
      case "5":
        // 랜덤(개껌)
        return (
          <>
            <mesh
              geometry={nodes.dino_egg.geometry}
              material={materials.egg_material}
              position={[0.99, 1.83, 0.72]}
              rotation={[-1.03, -1.28, 2.42]}
              scale={0}
            />
          </>
        );
    }
  };
  const props: any = { position };
  return (
    <group {...props} dispose={null}>
      {selectGlasses()}
      {selectHat()}
      {selectWing()}
      <group
        position={[0.38, 2.96, 0.47]}
        rotation={[0.63, -0.62, 0.4]}
        scale={0.19}
      >
        <mesh
          geometry={nodes.Sphere001.geometry}
          material={materials["Material.019"]}
        />
        <mesh
          geometry={nodes.Sphere001_1.geometry}
          material={materials["Material.021"]}
        />
        <mesh
          geometry={nodes.Sphere001_2.geometry}
          material={materials["Material.022"]}
        />
        <mesh
          geometry={nodes.Sphere001_3.geometry}
          material={materials["Material.029"]}
        />
        <mesh
          geometry={nodes.Sphere001_4.geometry}
          material={materials["Material.030"]}
        />
        <mesh
          geometry={nodes.Sphere001_5.geometry}
          material={materials["Material.031"]}
        />
        <mesh
          geometry={nodes.Sphere001_6.geometry}
          material={materials["Material.032"]}
        />
        <mesh
          geometry={nodes.Sphere001_7.geometry}
          material={materials["Material.033"]}
        />
        <mesh
          geometry={nodes.Sphere001_8.geometry}
          material={materials["Material.034"]}
        />
        <mesh
          geometry={nodes.Sphere001_9.geometry}
          material={materials["Material.035"]}
        />
        <mesh
          geometry={nodes.Sphere001_10.geometry}
          material={materials["Material.036"]}
        />
        <mesh
          geometry={nodes.Sphere001_11.geometry}
          material={materials["Material.037"]}
        />
        <mesh
          geometry={nodes.Sphere001_12.geometry}
          material={materials["Material.038"]}
        />
        <mesh
          geometry={nodes.Sphere001_13.geometry}
          material={materials["Material.039"]}
        />
        <mesh
          geometry={nodes.Sphere001_14.geometry}
          material={materials["Material.040"]}
        />
        <mesh
          geometry={nodes.Sphere001_15.geometry}
          material={materials["Material.041"]}
        />
        <mesh
          geometry={nodes.Sphere001_16.geometry}
          material={materials["Material.042"]}
        />
        <mesh
          geometry={nodes.Sphere001_17.geometry}
          material={materials["Material.043"]}
        />
        <mesh
          geometry={nodes.Sphere001_18.geometry}
          material={materials["Material.044"]}
        />
        <mesh
          geometry={nodes.Sphere001_19.geometry}
          material={materials["Material.045"]}
        />
        <mesh
          geometry={nodes.Sphere001_20.geometry}
          material={materials["Material.046"]}
        />
        <mesh
          geometry={nodes.Sphere001_21.geometry}
          material={materials["Material.047"]}
        />
        <mesh
          geometry={nodes.Sphere001_22.geometry}
          material={materials["Material.048"]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/3D/custom_dino.glb");
