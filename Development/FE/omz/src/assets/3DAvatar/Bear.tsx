/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 bear.glb -t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Mesh: THREE.Mesh;
    Mesh_1: THREE.Mesh;
    Mesh_2: THREE.Mesh;
    Mesh_3: THREE.Mesh;
  };
  materials: {
    ["Material.005"]: THREE.MeshStandardMaterial;
    ["Material.007"]: THREE.MeshStandardMaterial;
    ["Material.006"]: THREE.MeshStandardMaterial;
    ["Material.002"]: THREE.MeshStandardMaterial;
  };
};

export function Bear(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/3D/bear.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group
        position={[0, 3, 0.01]}
        rotation={[0, -0.75, 0]}
        scale={[1.14, 1, 1.14]}
      >
        <mesh
          geometry={nodes.Mesh.geometry}
          material={materials["Material.005"]}
        />
        <mesh
          geometry={nodes.Mesh_1.geometry}
          material={materials["Material.007"]}
        />
        <mesh
          geometry={nodes.Mesh_2.geometry}
          material={materials["Material.006"]}
        />
        <mesh
          geometry={nodes.Mesh_3.geometry}
          material={materials["Material.002"]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/3D/bear.glb");
