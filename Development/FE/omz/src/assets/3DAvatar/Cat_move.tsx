/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 cat_move.glb -t
*/

import * as THREE from "three";
import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Arm: THREE.SkinnedMesh;
    Sphere004: THREE.SkinnedMesh;
    Sphere004_1: THREE.SkinnedMesh;
    Sphere004_2: THREE.SkinnedMesh;
    Cube001: THREE.SkinnedMesh;
    Cube001_1: THREE.SkinnedMesh;
    Cube001_2: THREE.SkinnedMesh;
    Cube001_3: THREE.SkinnedMesh;
    Cube001_4: THREE.SkinnedMesh;
    Cube001_5: THREE.SkinnedMesh;
    Cube001_6: THREE.SkinnedMesh;
    Cube001_7: THREE.SkinnedMesh;
    Cube001_8: THREE.SkinnedMesh;
    Cube001_9: THREE.SkinnedMesh;
    Sphere005: THREE.SkinnedMesh;
    Sphere005_1: THREE.SkinnedMesh;
    mixamorigHips: THREE.Bone;
  };
  materials: {
    ["Material.003"]: THREE.MeshStandardMaterial;
    ["Material.006"]: THREE.MeshStandardMaterial;
    ["Material.004"]: THREE.MeshStandardMaterial;
    ["Material.011"]: THREE.MeshStandardMaterial;
    ["Material.001"]: THREE.MeshStandardMaterial;
    ["Material.017"]: THREE.MeshStandardMaterial;
    ["Material.002"]: THREE.MeshStandardMaterial;
    ["Material.007"]: THREE.MeshStandardMaterial;
    ["Material.010"]: THREE.MeshStandardMaterial;
    ["Material.009"]: THREE.MeshStandardMaterial;
    ["Material.008"]: THREE.MeshStandardMaterial;
    ["Material.015"]: THREE.MeshStandardMaterial;
    ["Material.012"]: THREE.MeshStandardMaterial;
    ["Material.014"]: THREE.MeshStandardMaterial;
    ["Material.005"]: THREE.MeshStandardMaterial;
    ["Material.013"]: THREE.MeshStandardMaterial;
  };
};

type ActionName = "Armature|mixamo.com|Layer0";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export function Cat_move(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials, animations } = useGLTF(
    "/3D/cat_move.glb"
  ) as GLTFResult;
  const { actions } = useAnimations(animations, group);
  useEffect(() => {
    actions["Armature|mixamo.com|Layer0"]?.play();
  }, [actions]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group
          name="Armature"
          position={[0.07, 0.39, -0.05]}
          rotation={[Math.PI / 2, 0, 0.33]}
          scale={0.01}
        >
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh
            name="Arm"
            geometry={nodes.Arm.geometry}
            material={materials["Material.003"]}
            skeleton={nodes.Arm.skeleton}
          />
          <group name="Body">
            <skinnedMesh
              name="Sphere004"
              geometry={nodes.Sphere004.geometry}
              material={materials["Material.006"]}
              skeleton={nodes.Sphere004.skeleton}
            />
            <skinnedMesh
              name="Sphere004_1"
              geometry={nodes.Sphere004_1.geometry}
              material={materials["Material.004"]}
              skeleton={nodes.Sphere004_1.skeleton}
            />
            <skinnedMesh
              name="Sphere004_2"
              geometry={nodes.Sphere004_2.geometry}
              material={materials["Material.011"]}
              skeleton={nodes.Sphere004_2.skeleton}
            />
          </group>
          <group name="Head">
            <skinnedMesh
              name="Cube001"
              geometry={nodes.Cube001.geometry}
              material={materials["Material.001"]}
              skeleton={nodes.Cube001.skeleton}
            />
            <skinnedMesh
              name="Cube001_1"
              geometry={nodes.Cube001_1.geometry}
              material={materials["Material.017"]}
              skeleton={nodes.Cube001_1.skeleton}
            />
            <skinnedMesh
              name="Cube001_2"
              geometry={nodes.Cube001_2.geometry}
              material={materials["Material.002"]}
              skeleton={nodes.Cube001_2.skeleton}
            />
            <skinnedMesh
              name="Cube001_3"
              geometry={nodes.Cube001_3.geometry}
              material={materials["Material.007"]}
              skeleton={nodes.Cube001_3.skeleton}
            />
            <skinnedMesh
              name="Cube001_4"
              geometry={nodes.Cube001_4.geometry}
              material={materials["Material.010"]}
              skeleton={nodes.Cube001_4.skeleton}
            />
            <skinnedMesh
              name="Cube001_5"
              geometry={nodes.Cube001_5.geometry}
              material={materials["Material.009"]}
              skeleton={nodes.Cube001_5.skeleton}
            />
            <skinnedMesh
              name="Cube001_6"
              geometry={nodes.Cube001_6.geometry}
              material={materials["Material.008"]}
              skeleton={nodes.Cube001_6.skeleton}
            />
            <skinnedMesh
              name="Cube001_7"
              geometry={nodes.Cube001_7.geometry}
              material={materials["Material.015"]}
              skeleton={nodes.Cube001_7.skeleton}
            />
            <skinnedMesh
              name="Cube001_8"
              geometry={nodes.Cube001_8.geometry}
              material={materials["Material.012"]}
              skeleton={nodes.Cube001_8.skeleton}
            />
            <skinnedMesh
              name="Cube001_9"
              geometry={nodes.Cube001_9.geometry}
              material={materials["Material.014"]}
              skeleton={nodes.Cube001_9.skeleton}
            />
          </group>
          <group name="Leg">
            <skinnedMesh
              name="Sphere005"
              geometry={nodes.Sphere005.geometry}
              material={materials["Material.005"]}
              skeleton={nodes.Sphere005.skeleton}
            />
            <skinnedMesh
              name="Sphere005_1"
              geometry={nodes.Sphere005_1.geometry}
              material={materials["Material.013"]}
              skeleton={nodes.Sphere005_1.skeleton}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/3D/cat_move.glb");
